-----------------------------------iterative solution---------------------------------------------------------------------
Node*reverse(Node*head)
    {
        Node*pre=NULL,*curr=head;
        while(curr)
        {
            Node*nextP=curr->next;
            curr->next=pre;
            pre=curr;
            curr=nextP;
            
        }
        return pre;
    }
    
    Node* addOne(Node *head) 
    {
      Node*newHead=reverse(head);
      Node*temp=newHead;
      int carry=1;
      while(temp)
      {   int x=temp->data;
          temp->data=(temp->data+carry)%10;
          carry=(x+carry)/10;
          temp=temp->next;
          
      }
     Node*final=reverse(newHead);
      if(carry==1){
          Node*newNode=new Node(1);
          newNode->next=final;
          return newNode;
          
      }
      return final;
--------------------------------------------------------------------------------
